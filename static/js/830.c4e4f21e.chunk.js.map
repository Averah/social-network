{"version":3,"file":"static/js/830.c4e4f21e.chunk.js","mappings":"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","sources":["UI/CustomTextArea/CustomTextArea.jsx","components/HOC/withAuthRedirect.js","components/Profile/ProfileStatus/ProfileStatusWithHooks.jsx","webpack://social-network/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://social-network/./src/components/Profile/Posts/Post/Post.module.css?59e2","components/Profile/Posts/Post/Post.jsx","webpack://social-network/./src/components/Profile/Posts/MyPosts.module.css?a95a","components/Profile/Posts/AddPostForm.jsx","components/Profile/Posts/MyPosts.jsx","components/Profile/Posts/MyPostsContainer.jsx","webpack://social-network/./src/components/Profile/Profile.module.css?b512","components/Profile/Profile.jsx","components/Profile/ProfileContainerWithHooks.jsx"],"sourcesContent":["import { forwardRef } from 'react';\r\nimport './CustomTextArea.css';\r\n\r\n const CustomTextarea = forwardRef((props, ref) => {\r\n    const {customError, ...otherProps} = props;\r\n    return (\r\n      <div>\r\n        <textarea {...otherProps} ref={ref} />\r\n        {customError && (\r\n        <p>\r\n          {customError}\r\n        </p>\r\n        )}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  export default CustomTextarea","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to ='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent \r\n}","import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false)\r\n  let [status, setStatus] = useState(props.status)\r\n\r\n  useEffect (() => {\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n    \r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateUsersStatus(status)\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {editMode ? (\r\n        <div>\r\n          <input\r\n          onChange={onStatusChange}\r\n          onBlur={deactivateEditMode} \r\n          autoFocus={true} value={status} />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <span onClick={activateEditMode}>{props.status || \"Your status\"}</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"backgroundImage\":\"ProfileInfo_backgroundImage__SwClu\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__h+ube\"};","import Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"../ProfileStatus/ProfileStatusWithHooks\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <div>\r\n        {/* <img\r\n          className={s.backgroundImage}\r\n          src=\"https://www.ucf.edu/files/2020/04/space-header-1600x550-1600x500.jpg\"\r\n          alt=\"backgroundImage\"\r\n        ></img> */}\r\n\r\n        <div className={s.descriptionBlock}>\r\n          <img src={props.profile.photos.large} alt='avatar'/>\r\n          <ProfileStatusWithHooks status={props.status} updateUsersStatus={props.updateUsersStatus}/>\r\n          <div>{props.profile.fullName}</div>\r\n          <div>{props.profile.aboutMe}</div>\r\n          \r\n          </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__+LbrZ\",\"likes\":\"Post_likes__qO1MU\"};","import s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n\r\n    \r\n    <div className={s.item}>\r\n      <img src=\"https://png.pngtree.com/element_our/png_detail/20181228/avatar-icon-design-vector-png_296561.jpg\"></img>\r\n      {props.message}\r\n      <div className={s.likes}>{props.likes}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__1SYB2\",\"posts\":\"MyPosts_posts__avlut\"};","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addPostActionCreator } from \"../../../redux/profileReducer\";\r\nimport CustomTextarea from \"../../../UI/CustomTextArea/CustomTextArea\";\r\n\r\nconst AddPostForm = () => {\r\n  const {\r\n    reset,\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({ mode: \"onBlur\" });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (data) => {\r\n    dispatch(addPostActionCreator(data.postText));\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <div>\r\n      <CustomTextarea\r\n          name=\"postText\"\r\n          type=\"textarea\"\r\n          placeholder=\"Enter your post\"\r\n          {...register(\"postText\", {\r\n            required: \"You cannot send an empty post\",\r\n          })}\r\n          customError={errors?.postText ? (errors?.postText.message || \"Error!\") : null}\r\n        />\r\n        \r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddPostForm;\r\n","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport AddPostForm from \"./AddPostForm\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n  let postsElements = props.profilePage.posts.map((p) => (\r\n    <Post message={p.message} likes={p.likes} />\r\n  ));\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My Posts</h3>\r\n      <AddPostForm />\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n","\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addPostActionCreator,\r\n  updateNewPostTextActionCreator,\r\n} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profilePage: state.profilePage,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: () => {\r\n      dispatch(addPostActionCreator());\r\n    },\r\n    onPostChange: (text) => {\r\n      dispatch(updateNewPostTextActionCreator(text));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Profile_item__oy-HE\"};","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./Posts/MyPostsContainer\";\r\nimport s from \"./Profile.module.css\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={s.content}>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateUsersStatus={props.updateUsersStatus}\r\n      />\r\n      <MyPostsContainer store={props.store} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useEffect } from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUsersProfile,\r\n  getUsersStatus,\r\n  updateUsersStatus,\r\n} from \"../../redux/profileReducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../HOC/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nexport const ProfileContainerWithHooks = (props) => {\r\n  useEffect(() => {\r\n    let userId = props.match.params.userId;\r\n    if (!userId) {\r\n      userId = props.authorizedUserId;\r\n    }\r\n    props.getUsersProfile(userId);\r\n    props.getUsersStatus(userId);\r\n  }, [\r\n    props.match.params.userId,\r\n    props.getUsersProfile,\r\n    props.getUsersStatus,\r\n    props.authorizedUserId,\r\n  ]);\r\n\r\n  return (\r\n    <Profile\r\n      {...props}\r\n      profile={props.profile}\r\n      status={props.status}\r\n      updateUsersStatus={props.updateUsersStatus}\r\n    />\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n// let withUrlDataContainer = withRouter(AuthRedirectComponent );\r\n\r\n// export default connect(mapStateToProps, { getUsersProfile })(\r\n//   withUrlDataContainer\r\n// );\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUsersProfile,\r\n    getUsersStatus,\r\n    updateUsersStatus,\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainerWithHooks);\r\n"],"names":["forwardRef","props","ref","customError","otherProps","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","onBlur","updateUsersStatus","autoFocus","onClick","profile","className","s","src","photos","large","alt","fullName","aboutMe","Preloader","message","likes","useForm","mode","reset","register","handleSubmit","errors","formState","dispatch","useDispatch","onSubmit","data","addPostActionCreator","postText","name","type","placeholder","required","postsElements","profilePage","posts","map","p","addPost","onPostChange","text","updateNewPostTextActionCreator","MyPosts","store","ProfileContainerWithHooks","userId","match","params","authorizedUserId","getUsersProfile","getUsersStatus","compose","withRouter"],"sourceRoot":""}