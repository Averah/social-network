{"version":3,"file":"static/js/667.8afe2e46.chunk.js","mappings":"uLACA,EAA0B,yBAA1B,EAAiE,6BAAjE,EAAyG,0BAAzG,EAA6I,yB,UCA7I,EAAyB,4BAAzB,EAA8D,4B,SCmB9D,EAXyC,SAAH,GAA4B,IAAtBA,EAAU,EAAVA,WACtCC,EAAO,YAD6C,EAAFC,GAEtD,OACE,gBAAKC,UAAWC,EAAS,UACvB,SAAC,KAAO,CAACC,GAAIJ,EAAME,UAAW,YAAW,SAARG,SAA0BF,EAAW,EAAE,EAAE,SACvEJ,KAIT,ECjBA,EAAyB,wBCUzB,EAJqC,SAAH,GAAmB,IAAdO,EAAO,EAAPA,QACrC,OAAO,gBAAKJ,UAAWC,EAAS,SAAEG,GACpC,E,4DCsCA,EArC6B,WAC3B,OAKIC,EAAAA,EAAAA,IAAwB,CAAEC,KAAM,aAJlCC,EAAK,EAALA,MACAC,EAAQ,EAARA,SACAC,EAAY,EAAZA,aACaC,EAAM,EAAnBC,UAAaD,OAGTE,GAAWC,EAAAA,EAAAA,KAOjB,OACE,kBAAMC,SAAUL,GAND,SAACM,GAChBH,EAASI,EAAAA,EAAAA,+BAAuCD,EAAKE,iBACrDV,GACF,IAGyC,WACrC,0BACE,SAAC,KAAc,gBACbW,YAAY,sBACRV,EAAS,iBAAkB,CAC7BW,SAAU,sCACV,IACFC,YACQ,OAANV,QAAM,IAANA,GAAAA,EAAQO,gBACE,OAANP,QAAM,IAANA,OAAM,EAANA,EAAQO,eAAeb,UAAW,SAClC,WAIV,0BACE,SAACiB,EAAA,EAAmB,UAAC,qBAI7B,ECdA,GAAeC,E,QAAAA,IArBW,WACxB,IAAMC,GAAUC,EAAAA,EAAAA,KAAY,SAACC,GAAmB,OAAKA,EAAMC,YAAYH,OAAO,IACxEI,GAAWH,EAAAA,EAAAA,KAAY,SAACC,GAAmB,OAAKA,EAAMC,YAAYC,QAAQ,IAE5EC,EAAkBL,EAAQM,KAAI,SAACC,EAAGC,GAAK,OACzC,SAAC,EAAW,CAAClC,WAAYiC,EAAEE,KAAMjC,GAAI+B,EAAE/B,IAASgC,EAAS,IAEvDE,EAAmBN,EAASE,KAAI,SAACK,EAAGH,GAAK,OAC3C,SAAC,EAAO,CAAC3B,QAAS8B,EAAE9B,SAAc2B,EAAQ,IAE5C,OACE,iBAAK/B,UAAWC,EAAU,WACxB,gBAAKD,UAAWC,EAAc,SAAE2B,KAChC,iBAAK5B,UAAWC,EAAW,WACzB,gBAAKD,UAAWC,EAAU,SAAEgC,KAC5B,SAAC,EAAW,SAIpB,G,4GCvBO,SAASX,EAAoBa,GAMhC,OALuC,SAACC,GAEpC,OADeZ,EAAAA,EAAAA,KAAY,SAACC,GAAmB,OAAKA,EAAMY,KAAKC,MAAM,KAE9D,SAACH,GAAS,UAAMC,KADH,SAAC,KAAQ,CAAClC,GAAI,UAEtC,CAEJ,C","sources":["webpack://social-network/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://social-network/./src/components/Dialogs/DialogsItem/DialogsItem.module.css?e982","components/Dialogs/DialogsItem/DialogsItem.tsx","webpack://social-network/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.tsx","components/Dialogs/Message/MessageForm.tsx","components/Dialogs/Dialogs.tsx","components/HOC/withAuthRedirect.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__fWYAP\",\"dialogsItem\":\"Dialogs_dialogsItem__tDozZ\",\"messages\":\"Dialogs_messages__qFxvI\",\"message\":\"Dialogs_message__2VQ3r\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogsItem_dialog__PTPl3\",\"active\":\"DialogsItem_active__0Yfm5\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./DialogsItem.module.css\";\r\n\r\ntype PropsType = {\r\n  dialogName: string\r\n  id: number\r\n\r\n}\r\nconst DialogsItem: React.FC<PropsType> = ({ dialogName, id }) => {\r\n  let path = \"/dialogs/\" + id;\r\n  return (\r\n    <div className={s.dialog}>\r\n      <NavLink to={path} className={({ isActive}) => (isActive ? s.active : '')}>\r\n        {dialogName}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogsItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Message_dialog__GqiuT\"};","import React from \"react\";\r\nimport s from \"./Message.module.css\";\r\n\r\ntype PropsType = {\r\n  message: string\r\n}\r\n\r\nconst Message: React.FC<PropsType> = ({message}) => {\r\n  return <div className={s.dialog}>{message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { actions } from \"../../../redux/dialogsReducer\";\r\nimport { CustomContentButton } from \"../../../UI/CustomContentButton/CustomContentButton\";\r\nimport CustomTextarea from \"../../../UI/CustomTextArea/CustomTextArea\";\r\nimport { useAppDispatch } from '../../../Hooks/useAppDispatch';\r\n\r\ntype UserSubmitForm = {\r\n  dialogsMessage: string\r\n}\r\nconst MessageForm:React.FC = () => {\r\n  const {\r\n    reset,\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<UserSubmitForm>({ mode: \"onChange\" });\r\n\r\n  const dispatch = useAppDispatch()\r\n\r\n  const onSubmit = (data:UserSubmitForm) => {\r\n    dispatch(actions.addDialogsMessageActionCreator(data.dialogsMessage));\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <div>\r\n        <CustomTextarea\r\n          placeholder=\"Enter your message\"\r\n          {...register(\"dialogsMessage\", {\r\n            required: \"You cannot send an empty message\",\r\n          })}\r\n          customError={\r\n            errors?.dialogsMessage\r\n              ? errors?.dialogsMessage.message || \"Error!\"\r\n              : null\r\n          }\r\n        />\r\n      </div>\r\n      <div>\r\n        <CustomContentButton>Send message</CustomContentButton>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MessageForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogsItem from \"./DialogsItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport MessageForm from \"./Message/MessageForm\";\r\nimport { withAuthRedirect } from \"../HOC/withAuthRedirect\";\r\nimport { AppStateType } from '../../redux/redux-store';\r\n\r\n\r\nconst Dialogs: React.FC = () => {\r\n  const dialogs = useSelector((state: AppStateType) => state.dialogsPage.dialogs)\r\n  const messages = useSelector((state: AppStateType) => state.dialogsPage.messages)\r\n\r\n  let dialogsElements = dialogs.map((d, index) => (\r\n    <DialogsItem dialogName={d.name} id={d.id} key={index} />\r\n  ));\r\n  let messagesElements = messages.map((m, index) => (\r\n    <Message message={m.message} key={index}/>\r\n  ));\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItem}>{dialogsElements}</div>\r\n      <div className={s.messages}>\r\n        <div className={s.message}>{messagesElements}</div>\r\n        <MessageForm />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withAuthRedirect(Dialogs)\r\n","import React from \"react\";\r\nimport { useSelector } from 'react-redux';\r\nimport { AppStateType } from '../../redux/redux-store';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\n\r\nexport function withAuthRedirect<P>(Component: React.ComponentType<P>) {\r\n    const RedirectComponent: React.FC<P> = (props) => {\r\n        const isAuth = useSelector((state: AppStateType) => state.auth.isAuth)\r\n        if (!isAuth) return <Navigate to ='/login' />\r\n        return <Component { ...props } />\r\n    }\r\n    return RedirectComponent\r\n}"],"names":["dialogName","path","id","className","s","to","isActive","message","useForm","mode","reset","register","handleSubmit","errors","formState","dispatch","useAppDispatch","onSubmit","data","actions","dialogsMessage","placeholder","required","customError","CustomContentButton","withAuthRedirect","dialogs","useSelector","state","dialogsPage","messages","dialogsElements","map","d","index","name","messagesElements","m","Component","props","auth","isAuth"],"sourceRoot":""}