{"version":3,"file":"static/js/300.3e578757.chunk.js","mappings":"iNAiBE,GAdsBA,EAAAA,EAAAA,aAAW,SAACC,EAAOC,GACvC,IAAOC,EAA8BF,EAA9BE,YAAgBC,GAAU,OAAIH,EAAK,GAC1C,OACE,4BACE,uCAAcG,GAAU,IAAEF,IAAKA,KAC9BC,IACD,uBACGA,MAKT,G,gHCdF,G,QAAA,CAAgB,QAAU,yBAAyB,YAAc,6BAA6B,WAAa,8B,UCA3G,EAAyB,4BAAzB,EAA8D,4B,SCc9D,EAZoB,SAACF,GACnB,IAAII,EAAO,YAAcJ,EAAMK,GAE/B,OACE,gBAAKC,UAAWC,EAAS,UACvB,SAAC,KAAO,CAACC,GAAIJ,EAAMK,gBAAiBF,EAAS,SAC1CP,EAAMU,QAIf,ECZA,GAAiB,ECKjB,EAJgB,SAACV,GACf,OAAO,gBAAKM,UAAWC,EAAAA,OAAS,SAAEP,EAAMW,SAC1C,E,6BCyCA,EAvCoB,WAClB,OAKIC,EAAAA,EAAAA,IAAQ,CAAEC,KAAM,WAJlBC,EAAK,EAALA,MACAC,EAAQ,EAARA,SACAC,EAAY,EAAZA,aACaC,EAAM,EAAnBC,UAAaD,OAGTE,GAAWC,EAAAA,EAAAA,MAOjB,OACE,kBAAMC,SAAUL,GAND,SAACM,GAChBH,GAASI,EAAAA,EAAAA,IAA+BD,EAAKE,iBAC7CV,GACF,IAGyC,WACrC,0BACE,SAAC,KAAc,gBACbJ,KAAK,iBACLe,KAAK,WACLC,YAAY,sBACRX,EAAS,iBAAkB,CAC7BY,SAAU,sCACV,IACFzB,YACQ,OAANe,QAAM,IAANA,GAAAA,EAAQO,gBACE,OAANP,QAAM,IAANA,OAAM,EAANA,EAAQO,eAAeb,UAAW,SAClC,WAIV,0BACE,4BAAQ,qBAIhB,ECnBA,EAlBgB,SAACX,GACf,IAAI4B,EAAkB5B,EAAM6B,YAAYC,QAAQC,KAAI,SAACC,GAAC,OACpD,SAAC,EAAW,CAACtB,KAAMsB,EAAEtB,KAAML,GAAI2B,EAAE3B,IAAM,IAErC4B,EAAmBjC,EAAM6B,YAAYK,SAASH,KAAI,SAACI,GAAC,OACtD,SAAC,EAAO,CAACxB,QAASwB,EAAExB,SAAW,IAEjC,OACE,iBAAKL,UAAWC,EAAAA,QAAU,WACxB,gBAAKD,UAAWC,EAAAA,YAAc,SAAEqB,KAChC,iBAAKtB,UAAWC,EAAAA,SAAW,UACxB0B,GACD,SAAC,EAAW,SAIpB,ECQA,GAAeG,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,KAtBoB,SAACC,GACrB,MAAO,CACLT,YAAaS,EAAMT,YAEvB,IAEyB,SAACV,GACxB,MAAO,CACLoB,WAAY,WACVpB,GAASI,EAAAA,EAAAA,MACX,EACAiB,gBAAiB,SAACC,GAChBtB,GAASuB,EAAAA,EAAAA,IAAkCD,GAC7C,EAEJ,IAQEE,EAAAA,EAFF,CAGEC,E,mJC3BEC,EAA6B,SAACP,GAAK,MAAM,CACzCQ,OAAQR,EAAMS,KAAKD,OACtB,EAGYH,EAAmB,SAACK,GAAe,IACtCC,EAAiB,qGAIlB,OAJkB,8BACnB,WACI,OAAKC,KAAKlD,MAAM8C,QACT,SAACE,GAAS,UAAKE,KAAKlD,SADI,SAAC,KAAQ,CAACQ,GAAI,UAEjD,KAAC,EAJkB,CAAS2C,EAAAA,WAOhC,OADqCd,EAAAA,EAAAA,IAAQQ,EAARR,CAAoCY,EAE7E,C","sources":["UI/CustomTextArea/CustomTextArea.jsx","webpack://social-network/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://social-network/./src/components/Dialogs/DialogsItem/DialogsItem.module.css?e982","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Message/Message.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/Message/MessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/HOC/withAuthRedirect.js"],"sourcesContent":["import { forwardRef } from 'react';\r\nimport './CustomTextArea.css';\r\n\r\n const CustomTextarea = forwardRef((props, ref) => {\r\n    const {customError, ...otherProps} = props;\r\n    return (\r\n      <div>\r\n        <textarea {...otherProps} ref={ref} />\r\n        {customError && (\r\n        <p>\r\n          {customError}\r\n        </p>\r\n        )}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  export default CustomTextarea","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__fWYAP\",\"dialogsItem\":\"Dialogs_dialogsItem__tDozZ\",\"newMessage\":\"Dialogs_newMessage__FvTDh\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogsItem_dialog__PTPl3\",\"active\":\"DialogsItem_active__0Yfm5\"};","import { NavLink } from \"react-router-dom\";\r\nimport s from \"./DialogsItem.module.css\";\r\n\r\nconst DialogsItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n\r\n  return (\r\n    <div className={s.dialog}>\r\n      <NavLink to={path} activeClassName={s.active}>\r\n        {props.name}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogsItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {};","import s from \"./Message.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.dialog}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addDialogsMessageActionCreator } from \"../../../redux/dialogsReducer\";\r\nimport CustomTextarea from \"../../../UI/CustomTextArea/CustomTextArea\";\r\n\r\nconst MessageForm = () => {\r\n  const {\r\n    reset,\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({ mode: \"onBlur\" });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (data) => {\r\n    dispatch(addDialogsMessageActionCreator(data.dialogsMessage));\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <div>\r\n        <CustomTextarea\r\n          name=\"dialogsMessage\"\r\n          type=\"textarea\"\r\n          placeholder=\"Enter your message\"\r\n          {...register(\"dialogsMessage\", {\r\n            required: \"You cannot send an empty message\",\r\n          })}\r\n          customError={\r\n            errors?.dialogsMessage\r\n              ? errors?.dialogsMessage.message || \"Error!\"\r\n              : null\r\n          }\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Send message</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MessageForm;\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogsItem from \"./DialogsItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport MessageForm from \"./Message/MessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n  let dialogsElements = props.dialogsPage.dialogs.map((d) => (\r\n    <DialogsItem name={d.name} id={d.id} />\r\n  ));\r\n  let messagesElements = props.dialogsPage.messages.map((m) => (\r\n    <Message message={m.message} />\r\n  ));\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItem}>{dialogsElements}</div>\r\n      <div className={s.messages}>\r\n        {messagesElements}\r\n        <MessageForm />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n  addDialogsMessageActionCreator,\r\n  updateNewMessageTextActionCreator,\r\n} from \"../../redux/dialogsReducer\";\r\nimport { withAuthRedirect } from \"../HOC/withAuthRedirect\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addMessage: () => {\r\n      dispatch(addDialogsMessageActionCreator());\r\n    },\r\n    onMessageChange: (text) => {\r\n      dispatch(updateNewMessageTextActionCreator(text));\r\n    },\r\n  };\r\n};\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs)\r\n\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent)\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to ='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent \r\n}"],"names":["forwardRef","props","ref","customError","otherProps","path","id","className","s","to","activeClassName","name","message","useForm","mode","reset","register","handleSubmit","errors","formState","dispatch","useDispatch","onSubmit","data","addDialogsMessageActionCreator","dialogsMessage","type","placeholder","required","dialogsElements","dialogsPage","dialogs","map","d","messagesElements","messages","m","compose","connect","state","addMessage","onMessageChange","text","updateNewMessageTextActionCreator","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}